#!/usr/bin/env bash

set -eo pipefail
set -o errtrace
set -o nounset

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

source $DIR/script-common

BUILD_DIR=$1

test -d /nix # fail here if /nix doesn't exist

# pass build dir to subsidiary scripts
export BUILD_DIR
export HOME=$NIX_MNT

suppress_locale_warnings

install_nix

source $HOME/.nix-profile/etc/profile.d/nix.sh

export PATH=$HOME/.nix-profile/bin:$PATH

# set $nix to the hash of the nix version in store
eval $(grep nix= /nix/install | head -n 1)

export nix

topic "Updating nixpkgs"
nix-channel --update

topic "Evaluating deploy.nix"
SRC=$(nix-store --add-fixed sha256 --recursive $BUILD_DIR/git-export)
cat $(nix-instantiate $SRC/deploy.nix | head -n1)
OUT=$(nix-build $SRC/deploy.nix --no-out-link --option binary-cache-public-keys "cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= ryantrinkle.com-1:JJiAKaRv9mWgpVAz8dwewnZe0AzzEAzPkagE9SP5NWI=" --option binary-caches "https://cache.nixos.org https://nixcache.reflex-frp.org $NIX_EXTRA_BINARY_CACHE" -A api -A heroku-compile-hook)
CLOSURE=$()

topic "Copying closure"
mkdir -p $BUILD_DIR/nix/store
echo "$OUT" | ( while read -r outl || [[ -n "$outl" ]] ; do nix-store -qR $outl ; done ) | while read -r req
do
    rsync -a $req $BUILD_DIR/nix/store/
done

topic "Creating .profile.d"
mkdir -p $BUILD_DIR/.profile.d
cat <<EOF > $BUILD_DIR/.profile.d/000_nix.sh
export NIX_VERSION_FULL=$NIX_VERSION_FULL
export nix=$nix
export PATH=$REAL_APP_DIR/.nix-profile/bin:$REAL_APP_DIR/bin:\$PATH
EOF

(
  compilehook=$(find $BUILD_DIR/nix/store -name heroku-compile-hook -type f)
  if [ -x $compilehook ] ; then
      topic "Running compile hook at $compilehook"
      source $compilehook
  fi
)

topic "Creating run_in_proot.sh"
(
    outapi=$(echo "$OUT" | grep circuithub-api)
    cat <<EOF > $BUILD_DIR/bin/run_in_proot.sh
#!/bin/bash
export PATH=$outapi/bin:\$PATH
CMD=\$1
\$CMD "\${@:2}"
EOF
)

chmod u+x $BUILD_DIR/bin/run_in_proot.sh

topic "Creating run_proot.sh"
APP_NIX_ROOT_PATH=$REAL_APP_DIR/nix-mnt/$NIX_VERSION_FULL
cat <<EOF > $BUILD_DIR/bin/run_proot.sh
#!/usr/bin/env bash
$REAL_APP_DIR/bin/proot -b $REAL_APP_DIR/nix:/nix bash $REAL_APP_DIR/bin/run_in_proot.sh "\$@"
EOF

chmod u+x $BUILD_DIR/bin/run_proot.sh
